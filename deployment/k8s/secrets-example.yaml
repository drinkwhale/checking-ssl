# Secret 설정 예시
# 실제 사용 시 base64로 인코딩된 값을 사용하세요
# 예: echo -n "your-value" | base64
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secrets
type: Opaque
data:
  # 실제 값으로 교체하세요
  # username: base64로 인코딩된 "postgres"
  username: cG9zdGdyZXM=
  # password: base64로 인코딩된 실제 비밀번호
  password: <BASE64_ENCODED_PASSWORD>
---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-monitoring-secrets
type: Opaque
data:
  # Kubernetes 환경에서 PostgreSQL 서비스에 연결하기 위한 DATABASE_URL
  # 형식: postgresql://username:password@postgresql:5432/ssl_monitoring
  #
  # 예시 (실제 비밀번호로 교체 필요):
  # postgresql://postgres:yourpassword@postgresql:5432/ssl_monitoring
  #
  # base64 인코딩 방법:
  # echo -n "postgresql://postgres:yourpassword@postgresql:5432/ssl_monitoring" | base64
  database-url: <BASE64_ENCODED_DATABASE_URL>

  # Teams Webhook URL (선택사항)
  # teams-webhook-url: <BASE64_ENCODED_WEBHOOK_URL>

---
# Secret 생성 명령어 예시
#
# 1. PostgreSQL Secret 생성
# POSTGRES_PASSWORD="your-strong-password"
# kubectl create secret generic postgresql-secrets \
#   --from-literal=username=postgres \
#   --from-literal=password="${POSTGRES_PASSWORD}"
#
# 2. 애플리케이션 Secret 생성
# DATABASE_URL="postgresql://postgres:${POSTGRES_PASSWORD}@postgresql:5432/ssl_monitoring"
# kubectl create secret generic ssl-monitoring-secrets \
#   --from-literal=database-url="${DATABASE_URL}"
#
# 3. Teams Webhook URL 추가 (선택사항)
# TEAMS_WEBHOOK_URL="your-teams-webhook-url"
# kubectl create secret generic ssl-monitoring-secrets \
#   --from-literal=database-url="${DATABASE_URL}" \
#   --from-literal=teams-webhook-url="${TEAMS_WEBHOOK_URL}" \
#   --dry-run=client -o yaml | kubectl apply -f -
#
# 참고:
# - APP_URL은 deployment.yaml에 환경변수로 설정됨 (https://postgresql-checking-ssl.d3.clouz.io)
# - DATABASE_URL은 클러스터 내부 PostgreSQL 서비스를 가리킴 (postgresql:5432)
